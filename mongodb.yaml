apiVersion: v1
kind: ReplicationController
metadata:
  annotations:
    cce/app-createTimestamp: 2018-11-22-21-01-55
    cce/app-description: ""
    cce/app-updateTimestamp: 2018-11-22-21-01-55
  creationTimestamp: null
  generation: 1
  labels:
    cce/appgroup: xddddddddddddddddd
    name: database
    rollingupdate: "false"
  name: database
  selfLink: /api/v1/namespaces/default/replicationcontrollers/database
spec:
  replicas: 1
  selector:
    cce/appgroup: xddddddddddddddddd
    name: database
    rollingupdate: "false"
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/affinity: '{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"failure-domain.beta.kubernetes.io/zone","operator":"NotIn","values":[""]}]}]}}}'
      creationTimestamp: null
      labels:
        cce/appgroup: xddddddddddddddddd
        name: database
        rollingupdate: "false"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: failure-domain.beta.kubernetes.io/zone
                operator: NotIn
                values:
                - ""
      containers:
      - image: mongo:3.4.18-jessie
        imagePullPolicy: IfNotPresent
        name: mongodb
        ports:
        - containerPort: 27017
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data/db
          name: volume-db
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /mongodb
        name: volume-db
status:
  replicas: 0
